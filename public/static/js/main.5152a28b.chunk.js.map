{"version":3,"sources":["utils/memoryUtils.js","utils/storageUtils.js","api/ajax.js","api/index.js","pages/login/login.jsx","config/menuConfig.js","components/left-navigate/index.jsx","utils/dateUtils.js","components/link-button/index.jsx","components/header-navigate/index.jsx","pages/home/home-line.jsx","pages/home/home-bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/product/home.jsx","utils/constants.js","pages/product/upload-pictures.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/authorized-form.jsx","pages/role/role.jsx","pages/user/user-add-update.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/order/order.jsx","pages/non-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js","assets/imgs/亚盟.png"],"names":["user","store","set","get","remove","ajax","url","data","type","Promise","resolve","reject","axios","params","post","then","response","catch","error","message","reqLogin","username","password","reqWeather","city","jsonp","err","console","log","status","results","weather_data","dayPictureUrl","weather","temperature","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqCategory","reqUpdateStatus","productId","reqImageDelete","name","reqAddOrUpdateProduct","product","_id","reqAddRoles","roleName","reqUpdateAuthorizedRoles","role","reqUsers","reqUserDel","userId","reqUserAddUpdate","Item","Login","handleSubmit","event","preventDefault","form","props","values","getFieldsValue","validateFields","a","result","success","memoryUtils","storageUtils","history","replace","msg","validatorPWD","rule","value","callback","length","test","to","getFieldDecorator","this","className","src","logo","alt","onSubmit","rules","required","whiteSpace","min","max","pattern","prefix","style","color","placeholder","validator","htmlType","Component","WrapLogin","create","menuList","title","key","icon","isPublic","children","SubMenu","LeftNav","hasRoleAuthorized","item","menus","indexOf","find","child","getMenuNodes","path","location","pathname","reduce","pre","childItem","openKey","push","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","HeaderNav","state","currentTime","now","getCurrentTime","intervalID","setInterval","setState","getWeather","getTitle","forEach","childrenItem","logout","confirm","onOk","clearInterval","onClick","HomeLine","dv","DataSet","createView","source","month","b","c","transform","fields","float","width","height","paddingRight","scale","range","forceFit","label","formatter","val","crosshairs","position","size","shape","stroke","lineWidth","HomeBar","marginLeft","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","defaultValue","moment","format","bodyStyle","padding","Option","AddForm","setForm","categorys","initialValue","map","categoryARR","UpdateForm","Category","subCategorys","loading","parentName","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","updateCategory","marginRight","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","ProductHome","total","products","price","newStatus","updateProductStatus","getProducts","list","onChange","margin","target","current","UploadPictures","previewVisible","previewImage","fileList","getImgs","file","handlePreview","preview","getBase64","originFileObj","imgs","img","index","uid","reader","FileReader","readAsDataURL","onload","onerror","uploadButton","action","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetails","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","details","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","inputAccept","TextArea","ProductAddOrUpdate","options","submit","desc","categoryIds","pCategoryId","creaters","detail","editors","isUpdate","goBack","validatorPrice","initOptions","categorysMap","isLeaf","childOptions","childOPT","loadData","selectedOptions","targetOption","childCategorys","React","createRef","labelCol","span","wrapperCol","autoSize","minRows","maxRows","addonAfter","ref","ProductDetail","categoryName1","categoryName2","all","dangerouslySetInnerHTML","__html","Product","component","exact","TreeNode","AuthorizedForm","getAuthorizedMenus","checkedKeys","getMenuTreeNodes","onChecked","treeNodes","nextProps","disabled","checkable","defaultExpandAll","onCheck","Role","roles","isShowAddRoles","isShowTreeAuthorized","create_time","getRoleList","onRows","addRoles","updateAuthorized","authorized","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","onRow","UserAddUpdate","phone","email","PureComponent","User","users","isShow","rolesName","showUserUpdate","userDel","initRolesName","getUsers","addUpdateUsers","showUserAdd","Bar","saleMount","storageMount","updateBar","sale","storage","getBarOption","text","tooltip","legend","xAxis","yAxis","series","option","Line","updateLine","getLineOption","Pie","updatePie1","getPieOption1","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getPieOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Order","NotFound","Footer","Sider","Content","Admin","from","textAlign","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5152a28b.chunk.js","sourcesContent":["/**\r\n * 用于在内存中保存数据的工具模块\r\n */\r\nexport default {\r\n  user:{} //保存当前登录的用户\r\n}\r\n","/**\r\n * 进行local数据管理的工具模块\r\n */\r\nimport store from 'store';\r\n\r\nconst USER_KEY='user_key';\r\nexport default{\r\n  /**\r\n   * 1.保存user\r\n   */\r\n  saveUser(user){\r\n    //string转化 接收json\r\n    //localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n    store.set(USER_KEY,user)\r\n  },\r\n\r\n  /**\r\n   * 2.读取user\r\n   */\r\n  readUser(){\r\n    //如果有值，转换为json，如果无值，直接为json可是字符串\r\n    //return JSON.parse(localStorage.getItem(USER_KEY) || '{}' )\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /**\r\n   * 3.删除user\r\n   */\r\n  removeUser(){\r\n    //localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n\r\n}\r\n","/**\r\n * 发送异步ajax请求的函数模块\r\n * 1.封装axios\r\n * 2.请求返回值：Promise对象\r\n * 3.优化：统一处理请求异常,在外层return一个Promise对象，在请求出错时，不使用reject，给出错误提示\r\n */\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\n//如果没有传值，指定空对象data={}\r\nexport default function ajax(url,data={},type='GET') {//形参默认值，默认GET请求\r\n\r\n  //3.优化：统一处理请求异常，省略login.jsx的try-catch\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    //1.执行异步ajax请求\r\n    let promise;\r\n    if(type==='GET'){\r\n      //发送get请求\r\n      promise= axios.get(url,{\r\n\r\n        //配置对象，对象不为单一对象，有可能是数组，所以这里只能用data\r\n        params: data\r\n      });\r\n    }else{\r\n      //发送post请求\r\n      //2.如果成功，调用resolve(value)\r\n      promise= axios.post(url,data);\r\n    }\r\n\r\n    promise.then(response=>{\r\n      /*直接.data：resolve(response); 传给login.jsx\r\n      * 取消异步的response，而是resolve返回response.data\r\n      * */\r\n      resolve(response.data);\r\n      //3.如果失败，不调用reject(reason),直接提示异常信息\r\n    }).catch(error=>{\r\n      //reject(error)\r\n      //引入antd的message\r\n      message.error('请求出错了'+error.message);\r\n    })\r\n\r\n  })\r\n\r\n}\r\n\r\n//请求登录接口\r\n/*\r\naxios('/login',{username:'Cevent',password:'123456'},'POST')\r\n  .then();\r\n\r\n//添加用户\r\naxios('/manager/user/add',{username:'Cevent',password:'123456',phone:'16619954889'},'POST')\r\n  .then();\r\n*/\r\n","/**分别暴露 -->接口型函数\r\n * 1.包含N个接口请求函数的模块\r\n * 2.每个接口函数的返回值：Promise\r\n * 3.根据接口文档，定义接口请求\r\n *\r\n * jsonp解决ajax跨域的原理\r\n 1). jsonp只能解决GET类型的ajax请求跨域问题\r\n 2). jsonp请求不是ajax请求, 而是一般的get请求\r\n 3). 基本原理\r\n 浏览器端:\r\n 1) 动态生成<script>来请求后台接口(src就是接口的url)\r\n 2) 定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n 服务器端:\r\n 3) 接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n 浏览器端:\r\n 4) 收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */\r\n\r\nimport ajax from './ajax';\r\nimport jsonp from 'jsonp';\r\nimport {message} from 'antd';\r\n\r\nconst BASE='';\r\n\r\n//1.登录接口\r\n/*export function reqLogin(username,password) {\r\n  return ajax('/login',{username,password},'POST');\r\n}*/\r\n\r\n/*export const reqLogin=(username,password)=> ajax('/login',{username,password},'POST');*/\r\nexport const reqLogin=(username,password)=> ajax(BASE+'/login',{username,password},'POST');\r\n\r\n//需要在package.json中添加代理后端服务器地址：\"proxy\":\"http://localhost:5000\"\r\n\r\n\r\n//2.添加用户接口\r\nexport const reqAddUser=(user)=>ajax('/manager/user/add',user,'POST');\r\n\r\n//3.jsonp请求接口函数：天气weather(解决get类型的ajax请求跨域问题,jsonp本来是一般的get请求，不属于ajax请求)\r\nexport const reqWeather=(city)=>{\r\n\r\n  //返回更改为promise对象\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const url=`http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    jsonp(url,{},(err,data)=>{\r\n      console.log('jsonp',err,data);\r\n\r\n      //成功:获取API数据\r\n      if(!err && data.status==='success'){\r\n        //函数解构赋值\r\n        const {dayPictureUrl,weather,temperature}=data.results[0].weather_data[0];\r\n        resolve({dayPictureUrl,weather,temperature});\r\n      }else{\r\n        //失败\r\n        message.error('获取天气信息失败');\r\n      }\r\n\r\n    });\r\n  });\r\n\r\n\r\n}\r\n//reqWeather('北京')\r\n\r\n//category分类列表\r\n//1.获取一级/二级分类列表\r\nexport const reqCategorys=(parentId)=>ajax(BASE+'/manager/category/list',{parentId});\r\n//2.添加分类\r\nexport const reqAddCategory=(categoryName,parentId)=>ajax(BASE+'/manager/category/add',{categoryName,parentId},'POST');\r\n//3.更新分类{categoryId,categoryName} 传入一个对象，包含2个属性\r\nexport const reqUpdateCategory=({categoryId,categoryName})=>ajax(BASE+'/manager/category/update',{categoryId,categoryName},'POST');\r\n//4.获取商品分页列表\r\nexport const reqProducts=(pageNum,pageSize)=>ajax(BASE+'/manager/product/list',{pageNum,pageSize});\r\n\r\n//5.搜索商品名称/描述分页列表,[searchType]:搜索类型productName/productDesc\r\nexport const reqSearchProducts=({pageNum,pageSize,searchName,searchType})=>ajax(BASE+'/manager/product/search',{\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]:searchName,});\r\n\r\n/*export const reqSearchProducts=({pageNum,pageSize,searchName})=>ajax(BASE+'/manager/product/search',{\r\n  pageNum,\r\n  pageSize,\r\n  productName:searchName,});*/\r\n\r\n//6.根据分类ID获取分类:传入对象，是包含参数的对象，即使只有一个参数\r\nexport const reqCategory=(categoryId)=>ajax(BASE+'/manager/category/info',{categoryId});\r\n\r\n//7.更新商品状态(上/下架)\r\nexport const reqUpdateStatus=(productId,status)=>ajax(BASE+'/manager/product/updateStatus',{productId,status},'POST');\r\n\r\n//8.删除图片\r\nexport const reqImageDelete=(name)=>ajax(BASE+'/manager/img/delete',{name},'POST');\r\n\r\n//9.添加商品\r\n//export const reqAddProduct=(product)=>ajax(BASE+'/manager/product/add',{product},'POST');\r\n//10.修改商品\r\n//export const reqUpdateProduct=(product)=>ajax(BASE+'/manager/product/update',{product},'POST');\r\n\r\n//11.合并：添加/修改商品\r\nexport const reqAddOrUpdateProduct=(product)=>ajax(BASE+'/manager/product/'+(product._id?'update':'add'),product,'POST');\r\n\r\n//12.获取所有角色列表\r\nexport const reqRoles=()=>ajax(BASE+'/manager/role/list');\r\n\r\n//13.添加角色\r\nexport const reqAddRoles=(roleName)=>ajax(BASE+'/manager/role/add',{roleName},'POST')\r\n\r\n//14.获取更新的角色\r\nexport const reqUpdateAuthorizedRoles=(role)=>ajax(BASE+'/manager/role/update',role,'POST');\r\n\r\n//15.获取用户列表\r\nexport const reqUsers=()=>ajax(BASE+'/manager/user/list');\r\n\r\n//16.删除用户\r\nexport const reqUserDel=(userId)=>ajax(BASE+'/manager/user/delete',{userId},'POST');\r\n\r\n//17.添加/更新用户\r\nexport const reqUserAddUpdate=(user)=>ajax(BASE+'/manager/user/'+(user._id?'update':'add'),user,'POST');\r\n","import React, {Component} from 'react';\r\nimport './login.less';\r\n import logo from '../../assets/imgs/亚盟.png';\r\n import {Form,Icon,Input,Button,message} from 'antd';\r\n import memoryUtils from '../../utils/memoryUtils';\r\n import storageUtils from '../../utils/storageUtils';\r\n import {Redirect} from 'react-router-dom';\r\n import {reqLogin} from '../../api';\r\n\r\n //此处的定义不能卸载import之前\r\n const Item=Form.Item;\r\n /**\r\n * 登录路由组件\r\n */\r\nclass Login extends Component {\r\n  //提交事件\r\n  handleSubmit=(event)=>{\r\n    //阻止默认提交\r\n    event.preventDefault();\r\n\r\n    //获取form对象\r\n    const form=this.props.form;\r\n    //获取表单项值，返回对象\r\n    const values=form.getFieldsValue();\r\n    console.log('handleSubmit: ',values);\r\n\r\n    //对所有表单字段进行校验-初期表单\r\n    /*form.validateFields((err,values)=>{\r\n      if(!err){\r\n        //console.log('提交AJAX请求：Received values of form: ',values);\r\n\r\n        //请求登录\r\n        //函数解构\r\n        const {username,password}=values;\r\n        reqLogin(username,password)\r\n          .then(response=>{\r\n            console.log('Admin成功了',response.data);\r\n          })\r\n          .catch(error=>{\r\n            console.log('Admin失败了',error);\r\n          });\r\n\r\n      }else{\r\n        console.log('校验失败!');\r\n      }\r\n    })*/\r\n\r\n    /** async 和 await ：简化promise对象的使用，不用通过.then.catch来指定成功或者失败的回调函数。以同步编码方式 实现异步流程（有回调函数就是异步编码）\r\n     * 1. async：所在函数（最近的）定义的左侧写入\r\n     * 2. await：在返回promise的表达式左侧，写入await。不要promise，抓取promise异步执行成功的value数据\r\n     */\r\n\r\n    //优化表单(简化promise使用)：async await\r\n    form.validateFields(async (err,values)=>{\r\n      if(!err){\r\n        //console.log('提交AJAX请求：Received values of form: ',values);\r\n\r\n        //请求登录\r\n        //函数解构\r\n        const {username,password}=values;\r\n\r\n        //1.使用try-catch，优化ajax.jsx后，统一暴露异常，无需try-catch\r\n        /*try{*/\r\n\r\n          //2.接收异步请求：response ,使用await等待返回数据，await所在函数最最短需要添加async\r\n          /*修改1，取消response：const response=await reqLogin(username,password);*/\r\n        const result=await reqLogin(username,password);\r\n          //console.log('请求成功',response.data);\r\n\r\n          //3.返回结果对象\r\n          //修改2，不使用response.data：const result=response.data;//{status:0=存在,data:user} {status:1=不存在,msg:'error'}\r\n          //修改3，取消ajax.js中的response\r\n          if(result.status===0){\r\n            //登录成功\r\n            message.success('登录成功！');\r\n            //跳转之前 传给user（保存到utils）\r\n            const user=result.data;\r\n            memoryUtils.user=user;//存在内存中\r\n            storageUtils.saveUser(user);//保存在local本地中\r\n\r\n            //push跳转后台管理,现在没有完成的路径跳转，需要使用replace(无需回退)\r\n            /*this.props.history.push();*/\r\n            this.props.history.replace('/');\r\n          } else{\r\n            //失败\r\n            message.error(result.msg);\r\n          }\r\n\r\n        /*}catch(error){\r\n         alert('请求错误：'+error.message);\r\n        }*/\r\n\r\n      }else{\r\n        console.log('校验失败!');\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  //密码验证\r\n  validatorPWD=(rule,value,callback)=>{\r\n    console.log('validatorPWD验证：',rule,value);\r\n    /**\r\n     * callback():验证通过\r\n     * callback('')：验证失败，指定提示文本\r\n     * */\r\n\r\n    if(!value){\r\n      callback('请输入密码...');\r\n    }else if(value.length<5){\r\n      callback('密码长度不能小于4位');\r\n    }else if(value.length>14){\r\n      callback('密码长度不能大于13位');\r\n    }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n      callback('密码必须是英文、数字或下划线组成');\r\n    }else{\r\n      callback();\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    //如果用户已经登录，跳转后台管理界面\r\n    const user=memoryUtils.user;\r\n    if(user && user._id){\r\n      return <Redirect to='/'/>\r\n    }\r\n\r\n    //获取WrapLogin-form对象\r\n    const form =this.props.form;\r\n    const {getFieldDecorator}=form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>亚盟REACT全栈 — 数据查询系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登录</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            {/*\r\n                1)必 须 输 入\r\n                2)必 须 大 于 等 于 4 位\r\n                3)必 须 小 于 等 于 13 位\r\n                4)必 须 是 英 文 、 数 字 或 下 划 线 组\r\n                /^/ 以...开头  /$/以...结尾 /[a-zA-Z0-9_]+/以[a-z A-Z 0-9 _下划线] [内容] 位置[]+ 任意位置\r\n            */}\r\n            <Item>\r\n              {\r\n                getFieldDecorator('username',{\r\n                  //配置对象：属性名是特定的名称 whiteSpace:true,忽略空格\r\n                  //声明式验证：使用已定义好的验证规则\r\n                  rules:[\r\n                    {\r\n                    required:true,\r\n                      whiteSpace:true,\r\n                    message:'用户名不能为空'\r\n                    },\r\n                    {\r\n                      min:4,\r\n                      message:'用户名至少四位'\r\n                    },\r\n                    {\r\n                      max:13,\r\n                      message:'用户名不能超过13位'\r\n                    },\r\n                    {\r\n                      pattern:/^[a-zA-Z0-9_]+$/,\r\n                      message:'用户名/密码必须是英文、数字或下划线组成'\r\n                    }\r\n                  ],\r\n                })(\r\n                  <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Item>\r\n            <Form.Item>\r\n              {/*自定义验证validator*/}\r\n              {\r\n                getFieldDecorator('password',{\r\n                  rules:[\r\n                   {\r\n                     validator:this.validatorPWD\r\n                   }\r\n                ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              登录\r\n            </Button>\r\n\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n/**\r\n * 前端表单验证\r\n * 1.收集表单数据\r\n * 2.区别\r\n * （1）高阶函数\r\n *  |-一般特别的函数\r\n *    A. 接受函数类型的参数\r\n *    B. 返回值是函数\r\n *\r\n *  |-常见\r\n *    A. 定时器：setTimeOut() / setInterval()\r\n *    B. Promise: Promise( ()=> {} )\r\n *                then(value =>{}\r\n *                ,reason =>{}\r\n *                )\r\n *    C. 数组遍历相关的方法：forEach() / filter() / map() / reduce() / find() / findIndex()\r\n *    D. 函数对象的bind()\r\n *    E. Form.create()() / getFieldDecorator()()\r\n *\r\n *  /- 高阶函数更新动态，更加具有扩展性\r\n *\r\n *               {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: 'Please input your username!' }],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"用户名\"\r\n                />,\r\n              )}\r\n * （2）高阶组件:标签的实例\r\n *  |- 本质：就是一个函数\r\n *  |- 流程：接收一个组件（被包装组件），返回一个新组件（包装组件），包装组件回向被包装组件传入特定属性\r\n *  |- 作用：扩展组件的功能，接收组件函数，返回新的组件函数\r\n *\r\n */\r\n//调用Login组件，返回WrapLogin新组件（包装form组件），传递一个对象属性form\r\nconst WrapLogin=Form.create()(Login);\r\nexport default WrapLogin;\r\n\r\n","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的,所有user都可以看到\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/product',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList;\r\n","import React, {Component} from 'react';\r\nimport './index.less';\r\nimport logo from '../../assets/imgs/亚盟.png';\r\nimport {Link,withRouter} from 'react-router-dom';//高阶组件withRouter，包装leftNav\r\nimport {Menu,Icon} from 'antd';\r\n\r\n//默认暴露的模块可以写任意名字\r\nimport menuList from '../../config/menuConfig';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst SubMenu=Menu.SubMenu;//引入Menu的子菜单SubMenu\r\n/**\r\n * 左侧导航栏组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /**根据menu的数据数组，生成对应的标签数组\r\n   * item=\r\n   * const menuList = [\r\n        {\r\n         title: '首页', // 菜单标题名称\r\n         key: '/home', // 对应的path\r\n         icon: 'home', // 图标名称\r\n         isPublic: true, // 公开的\r\n         children:[], //menu子项\r\n\r\n       },\r\n\r\n   返回1：\r\n   <Menu.Item key=\"/home\">\r\n   <Link to='/home'>\r\n   <Icon type=\"pie-chart\" />\r\n   <span>首页</span>\r\n   </Link>\r\n   </Menu.Item>\r\n\r\n   返回2：\r\n   <SubMenu\r\n   key=\"sub1\"\r\n   title={\r\n              <span>\r\n                <Icon type=\"mail\" />\r\n                <span>商品</span>\r\n              </span>\r\n            }\r\n   >\r\n   确保每个key都不同，将key值设置为to值\r\n   <Menu.Item key=\"/category\">\r\n   <Link to='/category'>\r\n   <Icon type=\"mail\" />\r\n   <span>品类管理</span>\r\n   </Link>\r\n   </Menu.Item>\r\n\r\n   使用map+递归调用：{this.getMenuNodes(item.children)}\r\n   * */\r\n  //判断当前登录user对item是否有权限\r\n  hasRoleAuthorized=(item)=>{\r\n    //查询localStorage中的user_key\r\n    const {key,isPublic}=item;\r\n    const menus=memoryUtils.user.role.menus;\r\n    const username=memoryUtils.user.username;\r\n  //1.如果当前用户是admin，通过\r\n    //2.当前用户有item的权限，key匹配menus\r\n      //3.如果当前item是公开的\r\n  if(username==='admin' || isPublic || menus.indexOf(key)!==-1){//找不到menus=-1\r\n    return true;\r\n  }else if(item.children){\r\n    //4.如果当前用户有某个子item的权限，！！强制转换boolean值\r\n    return !!item.children.find(child=>menus.indexOf(child.key)!==-1)\r\n  }\r\n    return false;\r\n\r\n  }\r\n  getMenuNodes=(menuList)=>{\r\n\r\n    //获取当前请求的路由路径\r\n    const path=this.props.location.pathname;\r\n\r\n    return menuList.reduce((pre,item)=>{\r\n\r\n      //如果当前用户，有item对应的权限，则需要显示对应的菜单项\r\n      if(this.hasRoleAuthorized(item)){\r\n        if(!item.children){\r\n          //向pre添加Menu.Item\r\n          pre.push( (\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key}>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else{\r\n\r\n          //判断当前的子项是否等于当前请求路径\r\n          //const childItem=item.children.find(childItem=>childItem.key===path)\r\n          const childItem=item.children.find(childItem=>path.indexOf(childItem.key)===0)//判断是否以/product开头\r\n          //如果存在，说明当前item对应的子列表需要展开\r\n          if(childItem){\r\n            this.openKey=item.key;\r\n          }\r\n\r\n          //向pre添加<SubMenu>\r\n          pre.push( (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n        return pre;\r\n    },[]);\r\n  }\r\n\r\n  //在第一次render()之前，执行一次。为第一个render渲染做数据准备（同步）\r\n  //提示：UNSAFE_componentWillMount\r\n  componentWillMount(){\r\n    this.menuNodes=this.getMenuNodes(menuList);\r\n  }\r\n\r\n  render() {\r\n\r\n    //获取当前请求的路由路径\r\n    let path=this.props.location.pathname;\r\n    console.log('leftNav-render()',path);\r\n\r\n    //创建详情页后，解决菜单未选中,未找到匹配的字串（/product/....）为-1,找到匹配的字串（/product/detail）下标0/1/2(a/b/c)...\r\n    if(path.indexOf('/product')===0){//当前请求的是商品或其子路由界面\r\n      path='/product'\r\n    }\r\n\r\n    //得到需要打开菜单项的openKey\r\n    const openKey=this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n          <Link to='/' className=\"left-nav-header\">\r\n            <img src={logo} alt=\"logo\"/>\r\n            <h1>数据后台</h1>\r\n          </Link>\r\n\r\n        {/*antd-menu*/}\r\n        {/*设置首页默认选中(只确认一次，非动态) defaultSelectedKeys={[path]}\r\n        defaultOpenKeys={['/charts']} 动态打开包含子选项的模块\r\n        */}\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n          {/*<Menu.Item key=\"/home\">\r\n            <Link to='/home'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>首页</span>\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"mail\" />\r\n                <span>商品</span>\r\n              </span>\r\n            }\r\n          >\r\n            确保每个key都不同，将key值设置为to值\r\n            <Menu.Item key=\"/category\">\r\n              <Link to='/category'>\r\n                <Icon type=\"mail\" />\r\n                <span>品类管理</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/product\">\r\n              <Link to='/product'>\r\n                <Icon type=\"mail\" />\r\n                <span>商品管理</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <Menu.Item key=\"/user\">\r\n            <Link to='/user'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>用户管理</span>\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"/role\">\r\n            <Link to='/role'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>角色管理</span>\r\n            </Link>\r\n          </Menu.Item>*/}\r\n\r\n          {/*调用config的menuList*/}\r\n\r\n        </Menu>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n};\r\n\r\n/**\r\n * 高阶组件：包装非路由组件，返回一个新组件。新的路由组件向非路由组件传递3个属性：history/location/math\r\n */\r\nexport default withRouter(LeftNav);\r\n\r\n\r\n","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n  date.getFullYear()：获取4位的年\r\n  date.getMonth() + 1：获取月（默认month初始化为0），需要加1\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}\r\n","import React from 'react';\r\nimport './index.less';\r\n\r\n/**\r\n * 外形为链接的按钮\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}\r\n","import React, {Component} from 'react';\r\nimport './index.less';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport {formateDate} from '../../utils/dateUtils';\r\nimport {reqWeather} from '../../api';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\nimport menuList from '../../config/menuConfig';\r\n\r\nimport {Modal} from 'antd';//登出提示\r\nimport LinkButton from '../link-button';\r\n//const BASE='http://localhost:5000';\r\n\r\nclass HeaderNav extends Component {\r\n\r\n  state={\r\n    //特定格式的字符串\r\n    currentTime:formateDate(Date.now()), //当前时间的字符串格式\r\n    dayPictureUrl:'', //天气图片\r\n    weather:'', //天气文本\r\n    temperature:'', //温度\r\n  }\r\n\r\n  getCurrentTime=()=>{\r\n    //每隔1秒，更新状态数据\r\n    //需要存储，方便结束时间周期\r\n    this.intervalID=setInterval(()=>{\r\n      const currentTime=formateDate(Date.now());\r\n      this.setState({currentTime});\r\n    },1000)\r\n  }\r\n\r\n  getWeather=async ()=>{\r\n    //返回为promise对象，需要添加asyn和await\r\n    //解构\r\n    const {dayPictureUrl,weather,temperature}=await reqWeather('衡水');\r\n    this.setState({dayPictureUrl,weather,temperature});\r\n  }\r\n\r\n  //获取标题\r\n  getTitle=()=>{\r\n    //得到当前请求路径，引入withRouter，需要取消默认暴露\r\n    const path=this.props.location.pathname;\r\n    let title;\r\n    menuList.forEach(item=>{\r\n      if(item.key===path){//当前item.key=path，那么item.title=title\r\n        title=item.title;\r\n      }else if(item.children){\r\n        //在所有的子item中查找匹配\r\n        //const childrenItem=item.children.find(childrenItem=>childrenItem.key===path);\r\n        //优化三级联动title\r\n        const childrenItem=item.children.find(childrenItem=>path.indexOf(childrenItem.key)===0);\r\n\r\n        if(childrenItem){\r\n          title=childrenItem.title;\r\n        }\r\n      }\r\n    });\r\n    return title;\r\n  }\r\n\r\n  //退出登录\r\n  logout=()=>{\r\n    //显示确认框\r\n    Modal.confirm({\r\n      title:'确定退出吗？',\r\n      onOk:()=>{\r\n        console.log('OK',this);\r\n        //清楚user数据\r\n        storageUtils.removeUser();\r\n        memoryUtils.user={};\r\n\r\n        //跳转\r\n        this.props.history.replace('/login');\r\n      }\r\n    })\r\n    //\r\n  }\r\n\r\n  //设置循环定时器，动态时间 componentDidMount在第一次render之后执行，一般在这里执行异步操作\r\n  componentDidMount(){\r\n    this.getCurrentTime();\r\n    //获取当前天气显示\r\n    this.getWeather();\r\n  }\r\n\r\n  //取消时间周期循环:在当前组件卸载之前调用\r\n  componentWillUnmount(){\r\n    //清除定时器\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  render() {\r\n\r\n    //读取jsop\r\n    const {currentTime,dayPictureUrl,weather,temperature}=this.state;\r\n    const username=memoryUtils.user.username;\r\n    //读取title\r\n    const title=this.getTitle();\r\n    return (\r\n        <div className=\"header-nav\">\r\n          <div className=\"header-nav-top\">\r\n            <span>欢迎，{username}</span>\r\n            <LinkButton onClick={this.logout}>退出</LinkButton>\r\n          </div>\r\n          <div className=\"header-nav-bottom\">\r\n            <div className=\"header-nav-bottom-left\">{title}</div>\r\n            <div className=\"header-nav-bottom-right\">\r\n              {/*<span>2020-02-18 00.02.33</span>\r\n              <img src=\"http://api.map.baidu.com/images/weather/day/qing.png\" alt=\"weather\"/>\r\n              <span>晴</span>*/}\r\n              <span>{currentTime}</span>\r\n              <img src={dayPictureUrl} alt=\"weather\"/>\r\n              <span className=\"city\">衡水</span>\r\n              <span>{weather}</span>\r\n              <span>{temperature}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\n//高阶函数，包装headerHav\r\nexport default withRouter(HeaderNav);\r\n","import React, {Component} from 'react';\r\n\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class HomeLine extends Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 1050, height: 400,paddingRight:150}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class HomeBar extends Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card,Icon,Statistic,DatePicker,Timeline} from 'antd';\r\nimport moment from 'moment';\r\nimport HomeLine from './home-line';\r\nimport HomeBar from './home-bar';\r\nimport './home.less';\r\n\r\nconst dateFormat='YYYY/MM/DD';\r\nconst {RangePicker}=DatePicker;\r\nexport default class Home extends Component {\r\n\r\n  state={\r\n    isVisited:true\r\n  };\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited}=this.state;\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <HomeLine/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <HomeBar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n//可并入class，统一暴露\r\n//export default App;\r\n","import React, {Component} from 'react';\r\nimport {Form,Select,Input} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n/**\r\n * 添加分类的form组件\r\n */\r\n\r\nconst Item=Form.Item;\r\nconst Option=Select.Option;\r\nclass AddForm extends Component {\r\n\r\n  //申明接收props对象categorys\r\n  static propTypes={\r\n    setForm:PropTypes.func.isRequired, //获取form对象\r\n    categorys:PropTypes.array.isRequired, //接收一级分类数组\r\n    parentId:PropTypes.string.isRequired  //接收父分类ID\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    //从category中取出数据\r\n    const {categorys,parentId}=this.props;\r\n\r\n    //获取form对象\r\n    const {getFieldDecorator}=this.props.form;\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n\r\n          {\r\n            getFieldDecorator('parentId',{\r\n              initialValue:parentId,\r\n              })(\r\n              <Select >\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(\r\n                    categoryARR=> <Option value={categoryARR._id}>{categoryARR.name}</Option>\r\n                  )\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName',{\r\n              initialValue: '',\r\n                rules:[\r\n                  {\r\n                    required:true,\r\n                    message:'分类名称必须输入'\r\n                  }\r\n                ]\r\n            }\r\n            )(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n      </Form>\r\n    )\r\n  }\r\n};\r\n//转换为高阶组件\r\nexport default Form.create()(AddForm);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form,Input} from 'antd';\r\n\r\n/**\r\n * 更新分类的form组件\r\n */\r\n\r\nconst Item=Form.Item;\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes={\r\n    categoryName:PropTypes.string.isRequired,\r\n    setForm:PropTypes.func.isRequired\r\n  }\r\n\r\n  //同步调用\r\n  componentWillMount(){\r\n    //将form对象通过setForm方法传递给category父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    //读取当前指定分类的名字\r\n      const {categoryName}=this.props;\r\n\r\n    //获取form对象\r\n    const {getFieldDecorator}=this.props.form;\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n\r\n          {\r\n            getFieldDecorator('categoryName',{\r\n              initialValue:categoryName,\r\n              rules:[\r\n                {\r\n                  required:true,\r\n                  message:'分类名称必须输入'\r\n                }\r\n              ]\r\n              })(\r\n              <Input placeholder='请输入修改的内容'/>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n      </Form>\r\n    )\r\n  }\r\n};\r\n//转换为高阶组件\r\nexport default Form.create()(UpdateForm);\r\n","import React, {Component} from 'react';\r\nimport {Card,Table,Button,Icon,message,Modal} from 'antd';\r\nimport LinkButton from '../../components/link-button';\r\nimport {reqCategorys,reqUpdateCategory,reqAddCategory} from '../../api';\r\nimport AddForm from './add-form';\r\nimport UpdateForm from './update-form';\r\n/**\r\n * 商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state={\r\n    categorys:[], //一级分类列表\r\n    subCategorys:[], //二级分类列表\r\n    loading:false, //请求中\r\n    parentId:'0', //当前需要显示的父级分类列表parent id\r\n    parentName:'', //显示父级列表名\r\n    showStatus:0, //标识添加/更新确认框： 0不显示 1添加 2更新\r\n\r\n  }\r\n\r\n  //初始化table所有列的数组\r\n  initColumns=()=>{\r\n    this.columns = [\r\n      {\r\n        title: '分类名称',\r\n        dataIndex: 'name', //指定显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width:300,\r\n        //render中可以传递参数\r\n        render:(category)=>( //返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={()=>this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*<LinkButton onClick={this.showSubCategorys(category)}>查看子分类(这样写渲染的时候调用，需要点击才能调用)</LinkButton>*/}\r\n            {/*如何向事件回调函数传递参数：1.定义一个匿名箭头函数 2.在函数中调用处理的函数，并传入数据\r\n              onClick={()=>{this.showSubCategorys(category)}} 可省略外部大括号onClick={()=>this.showSubCategorys(category)}\r\n            */}\r\n            {this.state.parentId==='0'?<LinkButton onClick={()=>{this.showSubCategorys(category)}}>查看子分类</LinkButton>:null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  };\r\n\r\n  //异步获取一/二级分类列表显示:parentId,如果没有指定，根据状态中的parentId请求，如果指定，就根据parentId请求\r\n  getCategorys=async (parentId)=>{\r\n    //在发请求前，显示loading\r\n    this.setState({loading:true});\r\n    parentId=parentId || this.state.parentId;\r\n    console.log('parentId-v:',parentId)\r\n    //发异步ajax请求 获取数据\r\n    const result=await reqCategorys(parentId);\r\n    //请求之后，隐藏loading\r\n    this.setState({loading:false});\r\n    //判断是否存在\r\n    if(result.status===0){\r\n      //取出分类数组（一级/二级）\r\n      const categorys= result.data;\r\n\r\n      if(parentId==='0'){\r\n        //更新一级分类状态\r\n        console.log('sub第1次：',parentId==='5e513c09ec5b28bbb5a7adc3');\r\n        this.setState({\r\n          //categorys:categorys\r\n          categorys:categorys\r\n        })\r\n      }else{\r\n        //更新二级分类状态\r\n        console.log('sub第3次：',parentId==='5e513c09ec5b28bbb5a7adc3');\r\n        this.setState({\r\n          subCategorys:categorys\r\n        })\r\n        console.log('第4次',this.state.subCategorys,this.state.categorys);\r\n        console.log('对比5',this.state.subCategorys===this.state.categorys);\r\n      }\r\n\r\n    }else{\r\n      message.error('获取分类列表失败');\r\n    }\r\n  };\r\n\r\n  //显示指定一级分类对象的二级子列表\r\n  showSubCategorys=(category)=>{\r\n    //1.更新状态\r\n    this.setState({\r\n      parentId:category._id,\r\n      parentName:category.name\r\n    },()=>{//callback:回调函数在状态更新且重新render()之后执行\r\n      //在setSate之后，不能立即获取最新状态，因为setState是异步更新状态\r\n      console.log('sub第2次：',this.state.parentId==='5e513c09ec5b28bbb5a7adc3');\r\n      console.log('showSubCategorys():',typeof this.state.parentId===typeof this.state.parentName);\r\n      //2.获取二级分类列表\r\n      this.getCategorys()\r\n    })\r\n\r\n  };\r\n\r\n  //更新状态：显示一级分类列表\r\n  showCategorys=()=>{\r\n    this.setState({\r\n      parentId:'0',\r\n      parentName:'',\r\n      subCategorys:[]\r\n    })\r\n  };\r\n\r\n  //隐藏确认框\r\n  handleCancel=()=>{\r\n    //清除输入数据\r\n    this.form.resetFields();\r\n    //执行隐藏\r\n    this.setState({\r\n      showStatus:0\r\n    })\r\n  }\r\n\r\n  //1.显示添加\r\n  showAdd=()=>{\r\n    this.setState({\r\n      showStatus:1\r\n    })\r\n  }\r\n\r\n  //1.1添加分类\r\n  addCategory=()=>{\r\n    console.log('addCategory()1');\r\n\r\n    //表单验证\r\n    this.form.validateFields(async (err,values)=>{\r\n      if(!err){\r\n        console.log('addCategory()2');\r\n        //1.2隐藏确认框\r\n        this.setState({\r\n          showStatus:0\r\n        })\r\n\r\n        //1.3收集数据\r\n        //const {parentId,categoryName}=this.form.getFieldsValue()\r\n\r\n        //解构values\r\n        const {parentId,categoryName}=values;\r\n\r\n        //1.4清除数据\r\n        this.form.resetFields();\r\n        //1.5发送请求:根据ajax请求发送的前后参数顺序写入\r\n        const result=await reqAddCategory(categoryName,parentId)\r\n        if(result.status===0){\r\n\r\n          //添加的分类=当前分类。如果parentId=当前状态的id\r\n          if(parentId===this.state.parentId){\r\n            //重新获取分类列表\r\n            this.getCategorys();\r\n          }\r\n          //在二级分类下添加一级分类项，重新获取一级分类列表，但不需要显示一级列表\r\n          else if(parentId==='0'){\r\n            this.getCategorys('0');\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  //2.显示更新\r\n  showUpdate=(category)=>{\r\n\r\n    //保存分类对象\r\n    this.category=category;\r\n    //更新状态\r\n    this.setState({\r\n      showStatus:2\r\n    })\r\n  }\r\n\r\n  //2.1更新分类 ,引用validateFields，需要将async也调用使用await的上一个函数左边\r\n  //updateCategory=async ()=>{\r\n  updateCategory= ()=>{\r\n    console.log('updateCategory()');\r\n\r\n    //2.0表单验证通过\r\n    this.form.validateFields(async (err,values)=>{\r\n      if(!err){\r\n        //2.1隐藏确认框\r\n        this.setState({\r\n          showStatus:0\r\n        })\r\n\r\n        //2.2准备数据\r\n        const categoryId=this.category._id;\r\n        //validateFields(values)中包含categoryName\r\n        //const categoryName=this.form.getFieldValue('categoryName');\r\n        const {categoryName}=values; //函数结构调用categoryName\r\n\r\n        //清湖数据:resetFields()重置所有字段/表单项\r\n        this.form.resetFields();\r\n\r\n        //2.2发送请求更新分类\r\n        const result=await reqUpdateCategory({categoryId,categoryName});\r\n\r\n        if(result.status===0){\r\n          //2.3重新显示列表\r\n          this.getCategorys();\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //willMount为第一次render准备数据\r\n  componentWillMount(){\r\n    this.initColumns();\r\n  }\r\n\r\n  //didMount发送获取列表请求,执行异步任务：发异步ajax请求\r\n  componentDidMount(){\r\n    //获取一级分类列表\r\n    this.getCategorys();\r\n  }\r\n\r\n  render() {\r\n\r\n    //读取状态数据\r\n    const {categorys,subCategorys,parentId,parentName,showStatus,loading}=this.state\r\n\r\n    //读取指定的分类\r\n    const category=this.category || {} //没有指定则是空对象\r\n\r\n    //card左侧标题\r\n    const title=parentId==='0'?'一级分类列表':(\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight:10}}></Icon>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    );\r\n    //card右侧标题\r\n    const extra=(\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra} >\r\n        {/*bordered={true} =bordered 必须指定rowKey pagination分页设置  showQuickJumper:true快速跳转 loading:设置加载中 loading={true}*/}\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0'?categorys:subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize:5,showQuickJumper:true}}\r\n          />;\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm categorys={categorys} parentId={parentId} setForm={(form)=>{this.form=form}}/>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {/*申明UpateForm需要接收的属性 传入form对象*/}\r\n          <UpdateForm categoryName={category.name} setForm={(form)=>{this.form=form}}/>\r\n        </Modal>\r\n      </Card>\r\n\r\n    )\r\n  }\r\n};\r\n\r\n//可并入class，统一暴露\r\n//export default App;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Card,Select,Input,Button,Icon,Table,message} from 'antd';\r\nimport LinkButton from '../../components/link-button';\r\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api';\r\nimport {PAGE_SIZE} from '../../utils/constants';\r\n\r\nconst Option=Select.Option;\r\nexport default class ProductHome extends Component {\r\n\r\n  state={\r\n    total:0,//商品总数量\r\n    products:[],//商品的数组\r\n    loading:false, //加载\r\n    searchName:'', //输入搜索的关键字\r\n    searchType:'productName', //根据字段搜索\r\n  }\r\n\r\n  //初始化表格列数组\r\n  initColumns=()=>{\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render:(price)=>'￥'+price //指定人民币:指定对应的属性，传入对应的属性值\r\n      },\r\n      {\r\n        width:100,\r\n        title: '状态',\r\n        // dataIndex: 'status', //这里不需要指定status，将render参数变为product\r\n        render:(product)=> {\r\n          const {status,_id}=product;\r\n          const newStatus=status===1?2:1;\r\n          return (\r\n            <span>\r\n              {/*his.updateProductStatus在点击时调用，需要外部包函数*/}\r\n              <Button\r\n                type='primary'\r\n                onClick={()=>this.updateProductStatus(_id,newStatus)}\r\n              >\r\n                {status===1?'在售':'上架'}\r\n                </Button>\r\n              <span>{status===1?'在售':'已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width:200,\r\n        title: '操作',\r\n        render:(product)=>{\r\n          return(\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件{obj}*/}\r\n              <LinkButton onClick={()=>this.props.history.push('/product/detail',{product})}>查看详情</LinkButton>\r\n              <LinkButton onClick={()=>this.props.history.push('/product/add-update',product)}>修改</LinkButton>\r\n            </span>\r\n            )\r\n        }\r\n      },\r\n\r\n    ];\r\n  };\r\n\r\n  //获取指定页面的商品列表\r\n  getProducts=async (pageNum)=>{\r\n    //保存pageNum，使得在更新商品状态时，传入当前页码\r\n    this.pageNum=pageNum;\r\n\r\n    this.setState({loading:true});\r\n    //判断是否为搜索分页\r\n    const {searchName,searchType}=this.state;\r\n    //如果seatchName不为空，则进行搜索分页\r\n    let result;\r\n    if(searchName){\r\n      result=await reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType});\r\n\r\n    }else {\r\n      //一般分页\r\n      result=await reqProducts(pageNum,PAGE_SIZE);\r\n    }\r\n\r\n    this.setState({loading:false});\r\n    if(result.status===0){\r\n      //取出分页数据，更新状态，显示分页列表\r\n      const {total,list}=result.data;\r\n      this.setState({\r\n        total,\r\n        products:list\r\n      });\r\n    }\r\n  };\r\n\r\n  //更新商品的状态\r\n  updateProductStatus=async (productId,status)=>{\r\n    const result=await reqUpdateStatus(productId,status);\r\n    if(result.status===0){\r\n      if(status===1){\r\n        message.success('更新商品状态成功！可以销售了');\r\n      }else{\r\n        message.success('更新商品状态成功！已禁止销售');\r\n      }\r\n      //更新获取商品请求时，需要传入当前页，更改getProducts请求，保存pageNum\r\n      this.getProducts(this.pageNum);\r\n    }\r\n  };\r\n\r\n  //列数据\r\n  componentWillMount(){\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    //状态数据\r\n    const {products,total,loading,searchType,searchName}=this.state;\r\n\r\n    const title=(\r\n      <span>\r\n        {/*onChange实现队select事件选择option-value监听*/}\r\n        <Select value={searchType} style={{width:150}}\r\n                onChange={value=>{this.setState({searchType:value})}}>\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n\r\n        <Input value={searchName} placeholder='关键字' style={{width:200,margin:'0 15px'}}\r\n               onChange={event=>this.setState({searchName:event.target.value})}\r\n        />\r\n        {/*利用同一个方法，并且传入index分页值=1*/}\r\n        <Button type='primary' onClick={()=>{this.getProducts(1)}}>搜索</Button>\r\n\r\n      </span>\r\n    )\r\n    const extra=(\r\n      <Button type='primary' onClick={()=>this.props.history.push('/product/add-update')}>\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered //边框\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={\r\n            {total,\r\n              defaultPageSize:PAGE_SIZE,\r\n              showQuickJumper:true,\r\n              //onChange默认传递pageNum参数，只需要直接调用获取商品的方法\r\n              //onChange:(pageNum)=>{this.getProducts(pageNum)}\r\n              onChange:this.getProducts,\r\n              current:this.pageNum //指定搜索后的当前页码\r\n            }\r\n          }\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n};\r\n","/**\r\n * 常量数据\r\n */\r\nexport const PAGE_SIZE=3 //每页显示条数\r\nexport const BASE_IMG_URL='http://localhost:5000/upload/' //默认图片地址\r\n","import React, {Component} from 'react';\r\nimport { Upload, Modal,message } from 'antd';\r\nimport {reqImageDelete} from '../../api';\r\nimport PropTypes from 'prop-types';\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/**\r\n * 图片上传\r\n */\r\nexport default class UploadPictures extends Component {\r\n\r\n  static propTypes={\r\n    imgs:PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, //预览可见：是否\r\n    previewImage: '', //可见图片的地址\r\n    fileList: [],\r\n  };\r\n\r\n  //初始化数据\r\n  constructor(props){\r\n    super(props);\r\n    let fileList=[];\r\n\r\n    //如果imgs有值\r\n    const {imgs}=this.props;\r\n    if(imgs && imgs.length>0){\r\n      fileList= imgs.map((img,index)=>({\r\n          uid: -index,\r\n          name: img,\r\n          status: 'done',\r\n          url: BASE_IMG_URL+img\r\n      })\r\n      );\r\n    }\r\n\r\n    //指定初始状态\r\n    this.state={\r\n      previewVisible: false, //预览可见：是否\r\n      previewImage: '', //可见图片的地址\r\n      fileList //所有已上传图片的数组\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 获取所有已上传图片名的数组：传给add/update\r\n   */\r\n  getImgs=()=>{\r\n    return this.state.fileList.map(file => file.name);\r\n  };\r\n\r\n  getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  };\r\n\r\n  //隐藏可见预览\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  //显示预览图\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await this.getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*上传图片时\r\n    file:当前操作的图片文件（上传/删除）\r\n    file.status:监视文件的上传进度，为3次：uploading ->uploading ->done\r\n  * fileList:已上传图片文件对象的数组\r\n  * */\r\n\r\n  handleChange =async ({ file,fileList }) => {\r\n    console.log('handleChange()',file,file.status,fileList.length,'非指向同一个对象：',file===fileList[fileList.length-1]);\r\n\r\n    //1.上传成功，将当前上传的file信息修正(name,url)\r\n    if(file.status==='done'){\r\n      const result=file.response; //{status:0,data:{name:'xxx.jpg',url:'img_url'}}\r\n\r\n      if(result.status===0){\r\n      message.success('上传图片成功！');\r\n      const {name,url}=result.data;\r\n      //需要将file指向faleList对象最后一个\r\n      file=fileList[fileList.length-1];\r\n      file.name=name;\r\n      file.url=url;\r\n      console.log('非指向同一个对象2：',file===fileList[fileList.length-1]);\r\n      }else{\r\n        message.error('上传图片失败');\r\n      }\r\n\r\n    }else if(file.status==='removed'){//删除图片\r\n      const result=await reqImageDelete(file.name);\r\n      if(result.status===0){\r\n        message.success('删除图片成功');\r\n      }else{\r\n        message.error('删除图片失败');\r\n      }\r\n    }\r\n\r\n    //在操作（上传/删除）过程中，更新fileList的status\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n        <div >点击上传</div>\r\n    );\r\n    return (\r\n      <div >\r\n        <Upload\r\n          action=\"/manager/img/upload\" //上传图片的接口地址\r\n          accept=\"image/*\" //指定只接收图片格式\r\n          listType=\"picture-card\"  //图片列表显示的样式： text, picture 和 picture-card\r\n          name=\"image\" //请求参数名：发到后台的文件参数名\r\n          fileList={fileList} //已经上传的文件对象列表\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {/*限制上传数量*/}\r\n          {fileList.length >= 6 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n/**\r\n * 商品详情：富文本编辑器\r\n */\r\nexport default class RichTextEditor extends Component {\r\n\r\n  //接收父组件属性\r\n  static propTypes={\r\n    details:PropTypes.string\r\n  }\r\n\r\n  state = {\r\n    //创建一个空的数据状态对象\r\n    editorState: EditorState.createEmpty(),\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.details;\r\n\r\n    if(html){\r\n      //1.如果有值，根据html字符串创建文本块\r\n      const contentBlock = htmlToDraft(html);\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n          editorState,\r\n      };\r\n    }else{\r\n      this.state={\r\n        //创建一个空的数据状态对象\r\n        editorState: EditorState.createEmpty(),\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 输入过程中，实时回调，传入最新的editorState对象，并且存储最新的状态值\r\n   * @param editorState\r\n   */\r\n  onEditorStateChange= (editorState) => {\r\n    console.log('onEditorStateChange()',editorState);\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  //返回输入标签html格式的文本\r\n  getDetails=()=>{\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n  }\r\n\r\n  //图片上传\r\n  uploadImageCallBack=(file)=> {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/manager/img/upload');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText);\r\n          //得到图片地址\r\n          const url=response.data.url;\r\n          console.log('response url: ',url);\r\n          resolve({data:{link:url}});\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          console.log('上传失败');\r\n          reject(error);\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      /*图片上传:toolbar*/\r\n        <Editor\r\n          editorState={editorState}\r\n          editorStyle={{border:'1px solid black',minHeight:200,paddingLeft:10}}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            image: {\r\n              uploadCallback: this.uploadImageCallBack,\r\n              alt: { present: true, mandatory: true },\r\n              inputAccept: 'image/png,image/jpg,image/jpeg,image/svg,img/gif',\r\n              },\r\n          }}\r\n        />\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card,Form,Input,Icon,Button,Cascader,message} from 'antd';\r\nimport LinkButton from '../../components/link-button';\r\nimport {reqCategorys,reqAddOrUpdateProduct} from '../../api';\r\nimport UploadPictures from './upload-pictures';\r\nimport RichTextEditor from './rich-text-editor';\r\n\r\nconst {Item}=Form;\r\nconst {TextArea}=Input;\r\n\r\nclass ProductAddOrUpdate extends Component {\r\n\r\n\r\n  state={\r\n    options:[]\r\n  };\r\n\r\n  //图片数据容器：读取上传图片的数据\r\n  constructor(props){\r\n    super(props);\r\n    //1.创建保存ref标识的标签对象的容器\r\n    this.creaters=React.createRef();\r\n    this.editors=React.createRef();\r\n  };\r\n\r\n  submit=()=>{\r\n    //进行表单验证，如果通过，接收域对象，并发送请求\r\n    this.props.form.validateFields(async (error,values)=>{\r\n      if(!error){\r\n        console.log('submit():',values);\r\n\r\n        //1.收集数据，并封装为product对象\r\n        const {name,desc,price,categoryIds}=values;\r\n        let pCategoryId,categoryId;\r\n        if(categoryIds.length===1){\r\n          pCategoryId='0';\r\n          categoryId=categoryIds[0];\r\n        }else{\r\n          pCategoryId=categoryIds[0];\r\n          categoryId=categoryIds[1];\r\n        }\r\n\r\n        const imgs=this.creaters.current.getImgs();\r\n        const detail=this.editors.current.getDetails();\r\n\r\n        console.log('creater-imgs ',imgs,'-details: ',detail,categoryId,pCategoryId);\r\n        //封装product对象\r\n        const product={name,desc,price,imgs,detail,pCategoryId,categoryId};\r\n        console.log('pCategoryId',pCategoryId,'categoryId: ',categoryId);\r\n\r\n        //如果是更新，需要添加_id\r\n        if(this.isUpdate){\r\n          product._id=this.product._id;\r\n        }\r\n\r\n        //2.调用接口请求函数,添加/更新\r\n        const result=await reqAddOrUpdateProduct(product);\r\n\r\n        //3.根据结果提示\r\n        if(result.status===0){\r\n          message.success(`${this.isUpdate?'更新':'添加'}商品成功！`);\r\n          this.props.history.goBack();\r\n        }else{\r\n          message.error(`${this.isUpdate?'更新':'添加'}商品失败！`);\r\n        }\r\n\r\n      }\r\n    })\r\n  };\r\n\r\n  //验证价格\r\n  validatorPrice=(rule,value,callback)=>{\r\n    console.log(value,typeof value);\r\n    if(value*1>0){\r\n      callback();//验证通过\r\n    }else{\r\n      callback('价格必须大于0');//验证通过\r\n    }\r\n\r\n  };\r\n\r\n  //接收categorys\r\n  initOptions=async (categorys)=>{\r\n    //1.根据categorys生成options数组\r\n    const options=categorys.map(categorysMap=>({\r\n      value:categorysMap._id,\r\n      label:categorysMap.name,\r\n      //这里只有加载后，才能确认true/false\r\n      isLeaf:false\r\n    }));\r\n\r\n    //3.如果是二级分类商品的更新\r\n    const {isUpdate,product}=this;\r\n    const {pCategoryId}=product;\r\n    if(isUpdate && pCategoryId!=='0'){\r\n      //4.获取对应的二级分类\r\n      const subCategorys=await this.getCategorys(pCategoryId);\r\n      //生成二级下拉列表\r\n      const childOptions=subCategorys.map(childOPT=>({\r\n        value:childOPT._id,\r\n        label:childOPT.name,\r\n        isLeaf:true\r\n      }));\r\n\r\n      //5.关联到对应的一级option\r\n      const targetOption=options.find(options=>options.value===pCategoryId);\r\n      targetOption.children=childOptions;\r\n    }\r\n\r\n    //2.更新options状态\r\n    this.setState({\r\n      options\r\n    });\r\n  };\r\n\r\n  //异步获取一二级分类列表,async返回Promise对象，Promise结果和值由async函数的结果来决定\r\n  getCategorys=async (parentId)=>{\r\n    const result=await reqCategorys(parentId);\r\n    if(result.status===0){ //{status:0,data:categorys}\r\n      const categorys=result.data;\r\n      //判断区分一二级分类\r\n      if(parentId==='0'){\r\n        this.initOptions(categorys);\r\n      }else{\r\n        //想要返回子分类，必须将loadData变为async，返回二级列表，当前返回的Promise的value=categorys\r\n        return categorys;\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  // 模拟请求，异步加载数据\r\n  loadData =async selectedOptions => {\r\n    //const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    const targetOption = selectedOptions[0]; //获取选择项\r\n    targetOption.loading = true;\r\n\r\n    //1.根据选中的分类，请求获取子分类\r\n    const subCategorys=await this.getCategorys(targetOption.value); //获取id\r\n    //关闭loading\r\n    targetOption.loading=false;\r\n\r\n    //这里是否有二级分类\r\n    if(subCategorys && subCategorys.length>0){\r\n      //2.生成一个二级列表的options\r\n      const childOptions=subCategorys.map(childCategorys=>({\r\n        value:childCategorys._id,\r\n        label:childCategorys.name,\r\n        //这里只有加载后，才能确认true/false\r\n        isLeaf:true\r\n      }))\r\n      //3.关联到当前option\r\n      targetOption.children=childOptions;\r\n    }else{\r\n      //4.当前选中的分类没有二级分类\r\n      targetOption.isLeaf=true;\r\n    }\r\n\r\n      //更新数据...arr(三点运算符，重新解构产生新数组)\r\n      this.setState({\r\n        options: [...this.state.options],\r\n      });\r\n\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.getCategorys('0');\r\n  };\r\n\r\n  //willMount在第一次render前执行一次\r\n  componentWillMount(){\r\n    //是否携带data\r\n    const product=this.props.location.state; //添加：no value 修改：value\r\n    //保存一个是否为更新的标识\r\n    this.isUpdate=!!product; //强制转换boolean类型：!!，判断false/true\r\n    //保存商品，如果没有，保存的是空对象\r\n    this.product=product || {}; //如果没有值，则返回空值\r\n  };\r\n\r\n  render() {\r\n\r\n    const {isUpdate,product}=this;\r\n    const {pCategoryId,categoryId,imgs,detail}=product;\r\n    const categoryIds=[]; //接收级联分类id的数组\r\n    if(isUpdate){\r\n      if(pCategoryId==='0'){\r\n        categoryIds.push(categoryId);\r\n      }else{\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    const title=(\r\n      <span>\r\n        <LinkButton onClick={()=>this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{color:'green',marginRight:15,fontSize:20}}></Icon>\r\n        </LinkButton>\r\n        <span className=\"products-title\">{isUpdate?'修改商品':'添加商品'}</span>\r\n      </span>\r\n    );\r\n\r\n    //设计表单item布局，引入需结构{...obj}，整体宽度24\r\n    const  formItemLayout={\r\n      labelCol:{span:3}, //左侧\r\n      wrapperCol:{span:9} //右侧包装input\r\n    };\r\n\r\n    //高阶函数调用\r\n    const {getFieldDecorator}=this.props.form;\r\n\r\n    return (\r\n      <Card title={title} >\r\n        <Form {...formItemLayout}>\r\n          {/*label标签默认设置商品名称提示前缀,默认一个item设置两行，需要修改formItemLayout\r\n           getFieldDecorator设置规则，required必须返回，label*\r\n          */}\r\n          <Item label='商品名称：'  >\r\n            {\r\n              getFieldDecorator('name',{\r\n                initialValue:product.name,\r\n                rules:[\r\n                  {required:true,message:'必须输入商品名称'}\r\n                ]\r\n              })(\r\n                <Input placeholder='请输入商品名称' />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label='商品描述：' >\r\n            {\r\n              getFieldDecorator('desc',{\r\n                initialValue:product.desc,\r\n                rules:[\r\n                  {required:true,message:'必须输入商品描述'}\r\n                ]\r\n              })(\r\n                <TextArea placeholder='请输入商品描述' autoSize={{minRows:2,maxRows:8}}/>\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label='商品价格：' >\r\n            {\r\n              getFieldDecorator('price',{\r\n                initialValue:product.price,\r\n                rules:[\r\n                  {required:true,message:'必须输入商品价格'},\r\n                  {validator:this.validatorPrice}\r\n                ]\r\n              })(\r\n                <Input type='number' placeholder='请输入商品价格' addonAfter='元'/>\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label='商品分类：' >\r\n            {\r\n              getFieldDecorator('categoryIds',{\r\n                initialValue:categoryIds,\r\n                rules:[\r\n                  {required:true,message:'必须选择商品分类'}\r\n                ]\r\n              })(\r\n                <Cascader\r\n                  placeholder='请指定商品分类'\r\n                  options={this.state.options} //需要显示的列表数组\r\n                  loadData={this.loadData} //加载子列表项\r\n                />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label='商品图片：' >\r\n            <UploadPictures ref={this.creaters} imgs={imgs}/>\r\n          </Item>\r\n          <Item label='商品详情：' labelCol={{span:3}} wrapperCol={{span:18}} >\r\n            <RichTextEditor ref={this.editors} details={detail}/>\r\n          </Item>\r\n          <Item >\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n};\r\n\r\n//表单验证需要包装CLASS\r\nexport default Form.create()(ProductAddOrUpdate);\r\n/**\r\n * 标签对象，就是组件对象\r\n * 1.子组件调用父组件的方法：将父组件的方法以函数属性的形式传递给子组件，子组件就可以调用\r\n * 2.父组件调用子组件的方法：在父组件中，通过ref得到子组件标签对象(也就是组件对象)，调用其方法\r\n */\r\n","import React, {Component} from 'react';\r\nimport {Card,Icon,List} from 'antd';\r\nimport LinkButton from \"../../components/link-button\";\r\nimport {BASE_IMG_URL} from '../../utils/constants';\r\nimport {reqCategory} from '../../api';\r\n\r\nconst Item=List.Item;\r\n/**\r\n * Product的详情子路由\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  //存储分类名称状态\r\n  state={\r\n    categoryName1:'', //一级分类名称\r\n    categoryName2:'', //二级分类名称\r\n  }\r\n\r\n  //获取分类，需要添加ajax查询\r\n  async componentDidMount(){\r\n    //得到当前商品的分类id\r\n    const {pCategoryId,categoryId}=this.props.location.state.product;\r\n    if(pCategoryId==='0'){//一级：一个分类名称\r\n      const result=await reqCategory(categoryId);\r\n      const categoryName1=result.data.name;\r\n      this.setState({categoryName1});\r\n    }else{//二级：包含一、二级分类名称\r\n      /*const result1=await reqCategory(pCategoryId);\r\n      const result2=await reqCategory(categoryId);\r\n      const categoryName1=result1.data.name;\r\n      const categoryName2=result2.data.name;*/\r\n\r\n      const results=await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)]);\r\n      const categoryName1=results[0].data.name;\r\n      const categoryName2=results[1].data.name;\r\n\r\n      this.setState({categoryName1,categoryName2});\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    //读取state数据:如果传递的为对象{obj}，那么这里的const也需要解构{obj}\r\n    //const product=this.props.location.state;\r\n    const {name,price,desc,detail,imgs}=this.props.location.state.product;\r\n    const {categoryName1,categoryName2}=this.state;\r\n    const title=(\r\n      <span>\r\n        <LinkButton>\r\n              <Icon\r\n                type='arrow-left'\r\n                style={{color:'green',marginRight:15,fontSize:20}}\r\n                onClick={()=>{this.props.history.goBack()}}/>\r\n        </LinkButton>\r\n        <span className=\"products-title\">商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className=\"products-detail\" >\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称：</span>\r\n            {name}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述：</span>\r\n            {desc}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">价格：{price}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类：</span>\r\n            {categoryName1} {categoryName2?' ---> '+categoryName2:''}\r\n          </Item>\r\n\r\n          <Item>\r\n            <span className=\"left\">商品图片：\r\n              {/*添加图片标准地址，需要设置常量constants,需要配置serer的file-upload，并且创建upload文件夹，放入img*/}\r\n                {\r\n                  imgs.map(img=>(\r\n                    <img  alt=\"商品图片\" className=\"product-img\"\r\n                          key={img} src={BASE_IMG_URL+img}\r\n                    />\r\n                  ))\r\n                }\r\n\r\n            </span>\r\n            <span style={{float:'left'}}>\r\n\r\n            </span>\r\n          </Item>\r\n\r\n          <Item>\r\n            {/*<span className=\"left\">商品详情<span dangerouslySetInnerHTML={{__html:'<h1 style=\"color:red\">商品详情的内容标题</h1>'}}></span>*/}\r\n            {/*引用标签格式字符串：dangerouslySetInnerHTML={{__html:detail}}*/}\r\n            <span className=\"left\">商品详情<span dangerouslySetInnerHTML={{__html:detail}}></span>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Switch,Route,Redirect} from 'react-router-dom';\r\nimport ProductHome from './home';\r\nimport ProductAddOrUpdate from './add-update';\r\nimport ProductDetail from './detail';\r\n//父组件定义样式，可在子组件实现\r\nimport './product.less';\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact />{/*路径完全比配exact*/}\r\n        <Route path='/product/add-update' component={ProductAddOrUpdate}></Route>\r\n        <Route path='/product/detail' component={ProductDetail}></Route>\r\n        <Redirect to='/product'></Redirect>\r\n      </Switch>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Form,Input} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * 添加角色的组件\r\n */\r\nconst Item=Form.Item;\r\n\r\nclass AddForm extends Component {\r\n\r\n  //申明接收props对象的roles\r\n  static propTypes={\r\n    setForm:PropTypes.func.isRequired, //获取form对象\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n\r\n    //2.获取form对象\r\n    const {getFieldDecorator}=this.props.form;\r\n\r\n    //指定Item布局\r\n    const formItemLayout={\r\n      labelCol:{span:6},\r\n      wrapperCol:{span:15}\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n\r\n        <Item label='角色名称：' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName',{\r\n              initialValue: '',\r\n              rules:[\r\n                {\r\n                  required:true,\r\n                  message:'角色名称必须输入'\r\n                }\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n      </Form>\r\n    )\r\n  }\r\n};\r\n\r\n//高阶函数\r\nexport default Form.create()(AddForm);\r\n","import React, {Component} from 'react';\r\nimport {Form,Input,Tree} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport menuList from '../../config/menuConfig';\r\n\r\n/**\r\n * 设置角色的组件\r\n */\r\nconst Item=Form.Item;\r\nconst TreeNode=Tree.TreeNode;\r\nexport default class AuthorizedForm extends Component {\r\n\r\n  //申明接收props对象的roles\r\n  static propTypes={\r\n    role:PropTypes.object\r\n  };\r\n\r\n  //动态取出role\r\n  constructor(props){\r\n    super(props);\r\n    //根据传入角色menus，生成初始状态，需要解构role\r\n    const {menus}=this.props.role;\r\n    this.state={\r\n      checkedKeys:menus\r\n    }\r\n  }\r\n\r\n  //将menus-checkedKeys传给role父组件\r\n  getAuthorizedMenus=()=> this.state.checkedKeys;\r\n\r\n  getMenuTreeNodes=(menuList)=>{\r\n    return menuList.reduce((pre,item)=>{\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {\r\n            item.children?this.getMenuTreeNodes(item.children):null\r\n          }\r\n        </TreeNode>\r\n      )\r\n      //每次遍历都会返回pre\r\n      return pre;\r\n    },[])\r\n  };\r\n\r\n  //选中某个node权限\r\n  onChecked=checkedKeys=>{\r\n    console.log('onChecked',checkedKeys);\r\n    //this.setState建立了新数组\r\n    this.setState({checkedKeys});\r\n  };\r\n\r\n  //加载角色treeNode\r\n  componentWillMount(){\r\n    this.treeNodes=this.getMenuTreeNodes(menuList);\r\n  };\r\n\r\n  //根据新传入的role来更新checkedKeys状态，willReceiveProps(该属性延续到react17版本 当前\"react\": \"^16.12.0\",)初始的状态（第一次接收属性）下不回调，只有更新状态时调用\r\n  /**\r\n   * 当组件接收到新的属性时，自动调用\r\n   * @param nextProps\r\n   */\r\n  componentWillReceiveProps(nextProps){\r\n    console.log('componentWillReceiveProps(): ',nextProps);\r\n    const menus=nextProps.role.menus;\r\n    this.setState({\r\n      checkedKeys:menus\r\n    });\r\n    //可以直接改变当前状态并被渲染调用，会报错： Line 69:5:  Do not mutate state directly. Use setState()\r\n    /*this.state.checkedKeys=menus;*/\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log('第一次调用render()');\r\n\r\n    //重新渲染role，传入的是最新修改的role，但是没有根据新role里面的menus进行显示，是根据onChecked的setState来显示的，但是并没有根据新传入的role更新状态\r\n    const {role}=this.props;\r\n    const {checkedKeys}=this.state;\r\n\r\n    //指定Item布局\r\n    const formItemLayout={\r\n      labelCol:{span:6},\r\n      wrapperCol:{span:15}\r\n    }\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Item label='角色名称：' {...formItemLayout}>\r\n              <Input value={role.name} disabled/>\r\n\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onChecked}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport {Card,Button,Table,Modal,message} from 'antd';\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport {reqRoles,reqAddRoles,reqUpdateAuthorizedRoles} from '../../api';\r\nimport AddForm from './add-form';\r\nimport AuthorizedForm from './authorized-form';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport {formateDate} from '../../utils/dateUtils';\r\n\r\n/**\r\n * 角色管理\r\n */\r\nexport default class Role extends Component {\r\n\r\n  state={\r\n    roles:[], //角色列表\r\n    role:{}, //选中的role\r\n    isShowAddRoles:false, //显示添加界面\r\n    isShowTreeAuthorized:false, //显示设置权限界面\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    //将创建的容器对象，交给Modal组件\r\n    this.authorized=React.createRef();\r\n  }\r\n\r\n  initColumns=()=>{\r\n    this.columns=[\r\n      {\r\n        title:'角色名称',\r\n        dataIndex:'name'\r\n      },\r\n      {\r\n        title:'创建时间',\r\n        dataIndex:'create_time',\r\n        render:(create_time)=>formateDate(create_time) //回调函数：可以直接省略函数参数，直接默认指定create_time\r\n      },\r\n      {\r\n        title:'授权时间',\r\n        dataIndex:'auth_time',\r\n        render:formateDate\r\n      },\r\n      {\r\n        title:'授权人',\r\n        dataIndex:'auth_name'\r\n      }\r\n    ]\r\n  };\r\n\r\n  getRoleList=async ()=>{\r\n    const result=await reqRoles();\r\n    if(result.status===0){\r\n      const roles=result.data;\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  };\r\n\r\n  onRows=(role)=>{\r\n    return {\r\n      onClick:event=>{\r\n        //点击行\r\n        console.log('onRows()--> ',role);\r\n        this.setState({\r\n          role\r\n        });\r\n      },\r\n    }\r\n  };\r\n\r\n  //添加角色\r\n  addRoles=()=>{\r\n\r\n    //0.进行表单验证\r\n    this.form.validateFields(async (error,values)=>{\r\n      if(!error){\r\n\r\n        //隐藏确认框\r\n        this.setState({\r\n          isShowAddRoles:false\r\n        });\r\n\r\n        //1.收集输入数据\r\n        const {roleName}=values;\r\n        //清除/重置输入的数据,取消后显示元数据，ok不显示，如果点击cancel也不要下次继续显示元数据，需要在modal中加入\r\n        this.form.resetFields();\r\n\r\n        //2.请求添加\r\n        const result=await reqAddRoles(roleName);\r\n        if(result.status===0){\r\n          //3.根据结果更新列表显示\r\n          message.success('添加角色成功');\r\n          //this.getRoleList();\r\n\r\n          //4.新产生的角色\r\n          const role=result.data;\r\n          //更新roles状态\r\n          //const roles=this.state.roles;\r\n          //尽量不要直接更新状态数据，需要先产生新的状态数据，不建议用push直接添加\r\n          /* //const roles=[...this.state.roles];\r\n          roles.push(role);\r\n          this.setState({\r\n            roles\r\n          });*/\r\n\r\n          //函数语法的简洁对象语法：基于函数的状态更新\r\n          this.setState(state=>({\r\n            roles:[...state.roles,role]\r\n          }))\r\n        }else{\r\n          message.error('添加角色失败');\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  };\r\n\r\n  //更新角色\r\n  updateAuthorized=async ()=>{\r\n\r\n    //隐藏确认框\r\n    this.setState({\r\n      isShowTreeAuthorized:false\r\n    });\r\n\r\n    const role=this.state.role;\r\n    //得到子组件新的state中的menus\r\n    const menus=this.authorized.current.getAuthorizedMenus();\r\n    role.menus=menus;\r\n    role.auth_time=Date.now();\r\n    role.auth_name=memoryUtils.user.username;\r\n\r\n    //请求更新\r\n    const result=await reqUpdateAuthorizedRoles(role);\r\n\r\n    if(result.status===0){\r\n\r\n      //this.getRoleList();\r\n\r\n      //如果当前用户为自己角色的权限，强制退出\r\n      if(role._id===memoryUtils.user.role_id){\r\n        //清理数据\r\n        memoryUtils.user={};\r\n        storageUtils.removeUser();\r\n        //跳转\r\n        this.props.history.replace('./login');\r\n        message.success('当前用户角色已修改，请重新登录！');\r\n      }else{\r\n        message.success('设置角色权限成功！');\r\n        this.setState({\r\n          roles:[...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }else{\r\n      message.error('设置角色失败！');\r\n    }\r\n  };\r\n\r\n  //初始化数据\r\n  componentWillMount(){\r\n    this.initColumns();\r\n  };\r\n\r\n  //发送请求\r\n  componentDidMount(){\r\n    this.getRoleList();\r\n  };\r\n\r\n  render() {\r\n\r\n    const {roles,role,isShowAddRoles,isShowTreeAuthorized}=this.state\r\n\r\n    const title=(\r\n      <span>\r\n        <Button type='primary' style={{marginRight:20}} onClick={()=>this.setState({isShowAddRoles:true})}>创建角色</Button>\r\n        {/*role_id=obj=true   role_id=null=false*/}\r\n        <Button type='primary' disabled={!role._id} onClick={()=>this.setState({isShowTreeAuthorized:true})}>设置角色权限</Button>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        {/*bordered={true} =bordered 必须指定rowKey pagination分页设置  showQuickJumper:true快速跳转-分页跳 loading:设置加载中 loading={true}*/}\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize:PAGE_SIZE,showQuickJumper:true}}\r\n          rowSelection={\r\n            {type:'radio',\r\n              selectedRowKeys:[role._id],\r\n              onSelect:(role)=>{ //选择某个radio\r\n                this.setState({\r\n                  role\r\n                })\r\n              }\r\n            }\r\n          }\r\n          onRow={this.onRows}\r\n        />\r\n\r\n        <Modal\r\n          title='添加角色'\r\n          visible={isShowAddRoles}\r\n          onOk={this.addRoles}\r\n          onCancel={()=>{\r\n            this.setState({\r\n              isShowAddRoles:false\r\n            })\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form)=>{this.form=form}}\r\n          />\r\n        </Modal>\r\n\r\n          <Modal\r\n            title='设置角色权限'\r\n            visible={isShowTreeAuthorized}\r\n            onOk={this.updateAuthorized}\r\n            onCancel={()=>{\r\n              this.setState({\r\n                isShowTreeAuthorized:false\r\n              })\r\n\r\n            }}\r\n          >\r\n            <AuthorizedForm\r\n              role={role}\r\n              ref={this.authorized}\r\n            />\r\n\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n};\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport {Form,Input,Select} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * 添加角色的组件\r\n */\r\nconst Item=Form.Item;\r\nconst Option=Select.Option;\r\nclass UserAddUpdate extends PureComponent {\r\n\r\n  //申明接收props对象的roles\r\n  static propTypes={\r\n    setForm:PropTypes.func.isRequired, //获取form对象\r\n    roles:PropTypes.array.isRequired, //获取角色\r\n    user:PropTypes.object\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles,user}=this.props;\r\n    //判断:const user=this.props.user || {};\r\n\r\n    //2.获取form对象\r\n    const {getFieldDecorator}=this.props.form;\r\n\r\n    //指定Item布局\r\n    const formItemLayout={\r\n      labelCol:{span:6},\r\n      wrapperCol:{span:15}\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n\r\n        <Item label='用户名：' >\r\n          {\r\n            getFieldDecorator('username',{\r\n              initialValue: user.username,\r\n              rules:[\r\n                {\r\n                  required:true,\r\n                  message:'用户名称必须输入'\r\n                }\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入用户名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n        {\r\n          user._id?null:(\r\n            <Item label='密码：' >\r\n              {\r\n                getFieldDecorator('password',{\r\n                  initialValue: user.password,\r\n                  rules:[\r\n                    {\r\n                      required:true,\r\n                      message:'密码必须输入'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n        <Item label='手机号：' >\r\n          {\r\n            getFieldDecorator('phone',{\r\n              initialValue: user.phone,\r\n              rules:[\r\n                {\r\n                  required:true,\r\n                  message:'手机号码必须输入'\r\n                }\r\n              ]\r\n            })(\r\n              <Input  placeholder='请输入手机号码'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱：' >\r\n          {\r\n            getFieldDecorator('email',{\r\n              initialValue: user.email,\r\n            })(\r\n              <Input  placeholder='请输入邮箱'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='角色：' >\r\n          {\r\n            getFieldDecorator('role_id',{\r\n              /*initialValue: '', 为了出现选择提示，这里不可以设置默认值*/\r\n              initialValue: user.role_id,\r\n              rules:[\r\n                {\r\n                  required:true,\r\n                  message:'角色必须选择'\r\n                }\r\n                ]\r\n            })(\r\n              <Select placeholder=\"请选择\">\r\n                {\r\n                  roles.map(\r\n                    role=>\r\n                      <Option key={role._id} value={role._id}>{role.name}</Option>\r\n                  )\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n      </Form>\r\n    )\r\n  }\r\n};\r\n\r\n//高阶函数\r\nexport default Form.create()(UserAddUpdate);\r\n","import React, {Component} from 'react';\r\nimport {Card,Button,Table,Modal,message} from 'antd';\r\nimport {formateDate} from '../../utils/dateUtils';\r\nimport LinkButton from \"../../components/link-button\";\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport {reqUserDel, reqUsers,reqUserAddUpdate} from '../../api';\r\nimport UserAddUpdate from './user-add-update';\r\n/**\r\n * 用户列表\r\n */\r\nexport default class User extends Component {\r\n\r\n  state={\r\n    users:[], //用户列表\r\n    roles:[], //角色列表\r\n    loading:false,\r\n    isShow:false, //是否显示确认框\r\n  };\r\n\r\n  initColumns=()=>{\r\n    this.columns=[\r\n      {\r\n        title:'用户名',\r\n        dataIndex:'username'\r\n      },\r\n      {\r\n        title:'邮箱',\r\n        dataIndex:'email'\r\n      },\r\n      {\r\n        title:'电话',\r\n        dataIndex:'phone'\r\n      },\r\n      {\r\n        title:'注册时间',\r\n        dataIndex:'create_time',\r\n        render:formateDate\r\n      },\r\n      {\r\n        title:'所属角色',\r\n        dataIndex:'role_id',\r\n        render:(role_id)=>this.rolesName[role_id]\r\n      },\r\n      {\r\n        title:'操作',\r\n        render:(user)=>(\r\n          <span>\r\n            <LinkButton onClick={()=>this.showUserUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={()=>this.userDel(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  };\r\n\r\n  //根据role的数组，生成包含所有角色名的对象，属性名用角色id值\r\n  initRolesName=(roles)=>{\r\n    const rolesName=roles.reduce((pre,role)=>{\r\n      pre[role._id]=role.name;\r\n      return pre;\r\n    },{});\r\n\r\n    //保存\r\n    this.rolesName=rolesName;\r\n  };\r\n\r\n  //获取用户\r\n  getUsers=async ()=>{\r\n    const result=await reqUsers();\r\n    if(result.status===0){\r\n      const {users,roles}=result.data;\r\n      //获取roleName\r\n      this.initRolesName(roles);\r\n      this.setState({\r\n        users,roles\r\n      });\r\n    }\r\n  };\r\n\r\n  //删除用户\r\n  userDel=(user)=>{\r\n    Modal.confirm({\r\n      title:`确认删除 ${user.username} 吗？`,\r\n      onOk:async ()=>{\r\n        const result=await reqUserDel(user._id)\r\n        if(result.status===0){\r\n          message.success('删除用户成功！');\r\n          //列表更新\r\n          this.getUsers();\r\n        }\r\n\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  //添加用户\r\n  addUpdateUsers=async ()=>{\r\n    //隐藏确认框\r\n    this.setState({isShow:false});\r\n    //1.收集数据\r\n    const user=this.form.getFieldsValue();\r\n    this.form.resetFields();\r\n\r\n    //如果是更新，需要给user指定_id属性\r\n    if(this.user){\r\n      user._id=this.user._id\r\n    }\r\n\r\n    //2.提交添加请求\r\n    const result=await reqUserAddUpdate(user);\r\n    //3.更新列表\r\n    if(result.status===0){\r\n      message.success(`${this.user?'修改':'添加'}用户成功！`);\r\n      this.getUsers();\r\n    }\r\n  };\r\n\r\n  showUserAdd=()=>{\r\n    //清空user\r\n    this.user=null;\r\n    this.setState({isShow:true});\r\n  }\r\n\r\n  //更新用户\r\n  showUserUpdate=(user)=>{\r\n    //1.保存user\r\n    this.user=user;\r\n    //2.\r\n    this.setState({\r\n      isShow:true\r\n    })\r\n    //3.\r\n\r\n  };\r\n\r\n  componentWillMount(){\r\n    this.initColumns();\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.getUsers();\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const {users,isShow,loading,roles}=this.state;\r\n    //const user=this.user; 这里引入是否存在的user对象\r\n    const user=this.user || {};\r\n    const title=<Button type=\"primary\" onClick={this.showUserAdd}>创建用户</Button>\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize:PAGE_SIZE,showQuickJumper:true}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id?'修改用户':'添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addUpdateUsers}\r\n          onCancel={()=>{\r\n            this.form.resetFields()\r\n            this.setState({isShow:false})\r\n          }}\r\n        >\r\n          <UserAddUpdate\r\n            setForm={form=>this.form=form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Card,Button} from 'antd';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n/**\r\n * 柱状图路由\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state={\r\n    saleMount:[5, 20, 36, 10, 10, 20],\r\n    storageMount:[10, 19, 50, 5, 15, 10]\r\n  }\r\n\r\n  updateBar=()=>{\r\n    console.log('updateBar');\r\n    this.setState(state=>({\r\n      saleMount:state.saleMount.map(sale=>sale+1),\r\n      storageMount:state.storageMount.reduce((pre,storage)=>{\r\n        pre.push(storage-1);\r\n        return pre;\r\n      },[]),\r\n    }))\r\n  };\r\n\r\n  getBarOption=(saleMount,storageMount)=>{\r\n    return {\r\n      title: {\r\n        text: 'ECharts 销售数据'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量','库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: saleMount\r\n      },\r\n        {\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: storageMount\r\n        }\r\n        ]\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const {saleMount,storageMount}=this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.updateBar}>更新</Button>\r\n        </Card>\r\n        <Card title='DATA-柱状图一'>\r\n          <ReactEcharts option={this.getBarOption(saleMount,storageMount)}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Card,Button} from 'antd';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n/**\r\n * 折线图路由\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state={\r\n    saleMount:[5, 20, 36, 10, 10, 20],\r\n    storageMount:[10, 19, 50, 5, 15, 10]\r\n  }\r\n\r\n  updateLine=()=>{\r\n    console.log('updateLine');\r\n    this.setState(state=>({\r\n      saleMount:state.saleMount.map(sale=>sale+1),\r\n      storageMount:state.storageMount.reduce((pre,storage)=>{\r\n        pre.push(storage-1);\r\n        return pre;\r\n      },[]),\r\n    }))\r\n  };\r\n\r\n  getLineOption=(saleMount,storageMount)=>{\r\n    return {\r\n      title: {\r\n        text: 'ECharts 销售数据'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量','库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: saleMount\r\n      },\r\n        {\r\n          name: '库存',\r\n          type: 'line',\r\n          data: storageMount\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const {saleMount,storageMount}=this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.updateLine}>更新</Button>\r\n        </Card>\r\n        <Card title='DATA-折线图二'>\r\n          <ReactEcharts option={this.getLineOption(saleMount,storageMount)}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Card,Button} from 'antd';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n/**\r\n * 饼状图路由-rose\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  updatePie1=()=>{\r\n    console.log('updatePie');\r\n    this.setState(state=>({\r\n      saleMount:state.saleMount.map(sale=>sale+1),\r\n      storageMount:state.storageMount.reduce((pre,storage)=>{\r\n        pre.push(storage-1);\r\n        return pre;\r\n      },[]),\r\n    }))\r\n  };\r\n\r\n  getPieOption1 = () => {\r\n    return {\r\n      title : {\r\n        text: '亚盟站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getPieOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.updatePie1}>更新</Button>\r\n        </Card>\r\n        <Card title='DATA-饼状图一'>\r\n          <ReactEcharts option={this.getPieOption1()} style={{height:300}}/>\r\n        </Card>\r\n        <Card title='DATA-饼状图二'>\r\n          <ReactEcharts option={this.getPieOption2()} style={{height:300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div>订单管理</div>\r\n    )\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\n\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Redirect,Route,Switch} from 'react-router-dom';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\n\r\n/**\r\n * 引入antd布局\r\n */\r\nimport {Layout} from 'antd';\r\n//将left-navigate下的文件设置为index，可直接引入文件夹，默认index文件\r\nimport LeftNav from '../../components/left-navigate';\r\nimport HeaderNav from '../../components/header-navigate';\r\n\r\n/*引入二级路由*/\r\nimport Home from '../home/home';\r\nimport Category from '../category/category';\r\nimport Product from '../product/product';\r\nimport Role from '../role/role';\r\nimport User from '../user/user';\r\nimport Bar from '../charts/bar';\r\nimport Line from '../charts/line';\r\nimport Pie from '../charts/pie';\r\nimport Order from '../order/order';\r\nimport NotFound from '../non-found/not-found';\r\n\r\nconst {Footer,Sider,Content} =Layout;\r\n/**\r\n *后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user=memoryUtils.user;\r\n    if(!user || !user._id){\r\n      //如果内存中没有存储user对象，当前未登录，自动跳转到登录在render()中\r\n      return <Redirect to='/login'></Redirect>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight:'100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <HeaderNav>Header</HeaderNav>\r\n          <Content style={{backgroundColor:'#fff',margin:30}}>\r\n            <Switch>\r\n              {/*如果请求根路径，则返回到home，exact需要精确匹配*/}\r\n              <Redirect from='/' to='/home' exact={true}/>\r\n              <Route path='/home' component={Home}></Route>\r\n              <Route path='/category' component={Category}></Route>\r\n              <Route path='/product' component={Product}></Route>\r\n              <Route path='/role' component={Role}></Route>\r\n              <Route path='/user' component={User}></Route>\r\n              <Route path='/charts/bar' component={Bar}></Route>\r\n              <Route path='/charts/line' component={Line}></Route>\r\n              <Route path='/charts/pie' component={Pie}></Route>\r\n              <Route path='/order' component={Order}></Route>\r\n              {/*避免请求错误，非法请求都重定向到home*/}\r\n              {/*<Redirect to='/home'/>*/}\r\n              {/*以上都无匹配：跳转404*/}\r\n              <Route component={NotFound}/>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign:'center',color:'#cccccc'}}>即刻开启你的数据跟踪之旅 — @cevent提供技术支持</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n};\r\n\r\n//可并入class，统一暴露\r\n//export default App;\r\n","/**应用的根组件\r\n */\r\nimport React,{Component} from 'react';\r\n/*import {Button,message} from 'antd';*/\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\n//HashRouter的项目和Switch项目不同，路径上必须加#:localhost:3000/#/\r\nimport Login from './pages/login/login';\r\nimport Admin from './pages/admin/admin';\r\n\r\n/**\r\n *\r\n */\r\nexport default class App extends Component{\r\n\r\n  /*  btnHandle=()=>{\r\n      message.success('this is ant-d designer');\r\n    }*/\r\n\r\n  render() {\r\n    /*return <Button type=\"primary\" onClick={this.btnHandle}>测试ant-d Primary</Button>*/\r\n    //源于根路径的问题，这里省略默认admin路径，<Route path='/admin' component={Admin}></Route>\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>{/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * 入口js\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport memoryUtils from './utils/memoryUtils';\r\nimport storageUtils from './utils/storageUtils';\r\n//import 'antd/dist/antd.css';\r\n\r\n//读取local中保存的user\r\nconst user=storageUtils.readUser();\r\nmemoryUtils.user=user;\r\n\r\n//将App组件标签渲染到index页面的div上root\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/亚盟.f071cb62.png\";"],"sourceRoot":""}